name: 'Modules Test Run - Terraform Latest'

on:
  schedule:
    - cron: '0 8 * * 2' # run every Tuesday at 11:00 MSK
  workflow_dispatch:
        
jobs:
  setup:
    name: 'Modules Test Run - Terraform Latest'
    runs-on: self-hosted
    env:
      TF_VAR_selectel_domain_name: ${{ secrets.SELECTEL_DOMAIN_NAME }}
      TF_VAR_selectel_user_name: ${{ secrets.SELECTEL_USER_NAME }}
      TF_VAR_selectel_user_id: ${{ secrets.SELECTEL_USER_ID }}
      TF_VAR_selectel_user_password: ${{ secrets.SELECTEL_USER_PASSWORD }}
      TF_VAR_selectel_project_name: ${{ secrets.SELECTEL_PROJECT_NAME }}
      TF_VAR_selectel_project_id: ${{ secrets.SELECTEL_PROJECT_ID }}
      TF_VAR_flavor_name: ${{ secrets.FLAVOR_NAME }}
    if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4

#    - name: Setup NodeJS v20
#      uses: actions/setup-node@v4
#      with:
#        node-version: 20

    - name: Setup tfswitch
      uses: stv-io/action-tfswitch@v1.0.2

    - name: Install Terraform latest
      shell: bash
      run: |
        tfswitch -s 1.0 --mirror https://mirror.selectel.ru/3rd-party/hashicorp-releases/terraform

    - name: Add .terraformrc
      shell: bash
      run: |
        cat <<EOS >> $HOME/.terraformrc
        provider_installation {
            network_mirror {
              url = "https://tf-proxy.selectel.ru/mirror/v1/"
            }
        }
        EOS

    - name: Lint Terraform
      run: terraform fmt -diff -check -recursive

    - name: Init Terraform
      run: >
        terraform init -reconfigure
        -backend-config="bucket=github-terraform-state"
        -backend-config="key=github-infra-examples.tfstate"
        -backend-config="access_key=${{ secrets.S3_ACCESS_KEY }}"
        -backend-config="secret_key=${{ secrets.S3_SECRET_KEY }}"

    - name: Terraform apply
      run: terraform apply -auto-approve

    - name: Terraform destroy
      run: terraform destroy -auto-approve

    - name: Send test Telegram alert
      if: ${{ (success()) }}
      uses: cbrgm/telegram-github-action@v1
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        thread-id: 168
        message: |
          ‚öôÔ∏è GitHub repository selectel/selectel-infra-examples

          üî• Terraform pipeline has succeeded!
          ‚û°Ô∏è Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - name: Send Telegram alert if failed on the main branch
      if: ${{ (failure()) }}
      # if: ${{ (failure()) && (github.ref == 'refs/heads/main') }}
      uses: cbrgm/telegram-github-action@v1
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        thread-id: 168
        message: |
          ‚öôÔ∏è GitHub repository selectel/selectel-infra-examples

          üî• Terraform pipeline has failed!
          ‚û°Ô∏è Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
